bien!
;;--FRAME--L0__tigermain_0:
LABEL: L6
MOVE: movq %'s0, %'d0 D:T4 S:rbx
MOVE: movq %'s0, %'d0 D:T5 S:r12
MOVE: movq %'s0, %'d0 D:T6 S:r13
MOVE: movq %'s0, %'d0 D:T7 S:r14
MOVE: movq %'s0, %'d0 D:T8 S:r15
MOVE: movq %'s0, %'d0 D:T9 S:rbp
OPER: addq $-8, %'d0 D:[T9] S:[T9]
OPER: movq %'s0, (%'s1) D:[] S:[rdi,T9]
OPER: leaq L1(%rip), %'d0 D:[T10] S:[]
MOVE: movq %'s0, %'d0 D:T0 S:T10
OPER: leaq L2(%rip), %'d0 D:[T11] S:[]
MOVE: movq %'s0, %'d0 D:T1 S:T11
OPER: movq $1, %'d0 D:[T12] S:[]
MOVE: movq %'s0, %'d0 D:T3 S:T12
MOVE: movq %'s0, %'d0 D:rdi S:T1
MOVE: movq %'s0, %'d0 D:rsi S:T0
OPER: call _stringCompare D:[rax,r10,r11,rdi,rsi,rdx,rcx,r8,r9] S:[rdi,rsi]
OPER: addq $16, %'d0 D:[rsp] S:[rsp]
MOVE: movq %'s0, %'d0 D:T2 S:rax
OPER: movq $0, %'d0 D:[T13] S:[]
OPER: cmpq %'s0, %'s1 D:[] S:[T13,T2]
OPER: je 'j0 D:[] S:[] J:[L3,L4]
LABEL: L4
OPER: movq $0, %'d0 D:[T14] S:[]
MOVE: movq %'s0, %'d0 D:T3 S:T14
LABEL: L3
MOVE: movq %'s0, %'d0 D:rax S:T3
MOVE: movq %'s0, %'d0 D:rbx S:T4
MOVE: movq %'s0, %'d0 D:r12 S:T5
MOVE: movq %'s0, %'d0 D:r13 S:T6
MOVE: movq %'s0, %'d0 D:r14 S:T7
MOVE: movq %'s0, %'d0 D:r15 S:T8
OPER: jmp 'j0 D:[] S:[] J:[L5]
LABEL: L5
OPER:  D:[] S:[rax,rsp,rbp,rbx,r12,r13,r14,r15]
;;-END-FRAME-:
;;--FLOW--L0__tigermain_0:
def:
	n0(LABEL: L6): 
	n1(MOVE: movq %'s0, %'d0 D:T4 S:rbx): T4
	n2(MOVE: movq %'s0, %'d0 D:T5 S:r12): T5
	n3(MOVE: movq %'s0, %'d0 D:T6 S:r13): T6
	n4(MOVE: movq %'s0, %'d0 D:T7 S:r14): T7
	n5(MOVE: movq %'s0, %'d0 D:T8 S:r15): T8
	n6(MOVE: movq %'s0, %'d0 D:T9 S:rbp): T9
	n7(OPER: addq $-8, %'d0 D:[T9] S:[T9]): T9
	n8(OPER: movq %'s0, (%'s1) D:[] S:[rdi,T9]): 
	n9(OPER: leaq L1(%rip), %'d0 D:[T10] S:[]): T10
	n10(MOVE: movq %'s0, %'d0 D:T0 S:T10): T0
	n11(OPER: leaq L2(%rip), %'d0 D:[T11] S:[]): T11
	n12(MOVE: movq %'s0, %'d0 D:T1 S:T11): T1
	n13(OPER: movq $1, %'d0 D:[T12] S:[]): T12
	n14(MOVE: movq %'s0, %'d0 D:T3 S:T12): T3
	n15(MOVE: movq %'s0, %'d0 D:rdi S:T1): rdi
	n16(MOVE: movq %'s0, %'d0 D:rsi S:T0): rsi
	n17(OPER: call _stringCompare D:[rax,r10,r11,rdi,rsi,rdx,rcx,r8,r9] S:[rdi,rsi]): r10, r11, r8, r9, rax, rcx, rdi, rdx, rsi
	n18(OPER: addq $16, %'d0 D:[rsp] S:[rsp]): rsp
	n19(MOVE: movq %'s0, %'d0 D:T2 S:rax): T2
	n20(OPER: movq $0, %'d0 D:[T13] S:[]): T13
	n21(OPER: cmpq %'s0, %'s1 D:[] S:[T13,T2]): 
	n22(OPER: je 'j0 D:[] S:[] J:[L3,L4]): 
	n23(LABEL: L4): 
	n24(OPER: movq $0, %'d0 D:[T14] S:[]): T14
	n25(MOVE: movq %'s0, %'d0 D:T3 S:T14): T3
	n26(LABEL: L3): 
	n27(MOVE: movq %'s0, %'d0 D:rax S:T3): rax
	n28(MOVE: movq %'s0, %'d0 D:rbx S:T4): rbx
	n29(MOVE: movq %'s0, %'d0 D:r12 S:T5): r12
	n30(MOVE: movq %'s0, %'d0 D:r13 S:T6): r13
	n31(MOVE: movq %'s0, %'d0 D:r14 S:T7): r14
	n32(MOVE: movq %'s0, %'d0 D:r15 S:T8): r15
	n33(OPER: jmp 'j0 D:[] S:[] J:[L5]): 
	n34(LABEL: L5): 
	n35(OPER:  D:[] S:[rax,rsp,rbp,rbx,r12,r13,r14,r15]): 
use:
	n0(LABEL: L6): 
	n1(MOVE: movq %'s0, %'d0 D:T4 S:rbx): rbx
	n2(MOVE: movq %'s0, %'d0 D:T5 S:r12): r12
	n3(MOVE: movq %'s0, %'d0 D:T6 S:r13): r13
	n4(MOVE: movq %'s0, %'d0 D:T7 S:r14): r14
	n5(MOVE: movq %'s0, %'d0 D:T8 S:r15): r15
	n6(MOVE: movq %'s0, %'d0 D:T9 S:rbp): rbp
	n7(OPER: addq $-8, %'d0 D:[T9] S:[T9]): T9
	n8(OPER: movq %'s0, (%'s1) D:[] S:[rdi,T9]): T9, rdi
	n9(OPER: leaq L1(%rip), %'d0 D:[T10] S:[]): 
	n10(MOVE: movq %'s0, %'d0 D:T0 S:T10): T10
	n11(OPER: leaq L2(%rip), %'d0 D:[T11] S:[]): 
	n12(MOVE: movq %'s0, %'d0 D:T1 S:T11): T11
	n13(OPER: movq $1, %'d0 D:[T12] S:[]): 
	n14(MOVE: movq %'s0, %'d0 D:T3 S:T12): T12
	n15(MOVE: movq %'s0, %'d0 D:rdi S:T1): T1
	n16(MOVE: movq %'s0, %'d0 D:rsi S:T0): T0
	n17(OPER: call _stringCompare D:[rax,r10,r11,rdi,rsi,rdx,rcx,r8,r9] S:[rdi,rsi]): rdi, rsi
	n18(OPER: addq $16, %'d0 D:[rsp] S:[rsp]): rsp
	n19(MOVE: movq %'s0, %'d0 D:T2 S:rax): rax
	n20(OPER: movq $0, %'d0 D:[T13] S:[]): 
	n21(OPER: cmpq %'s0, %'s1 D:[] S:[T13,T2]): T13, T2
	n22(OPER: je 'j0 D:[] S:[] J:[L3,L4]): 
	n23(LABEL: L4): 
	n24(OPER: movq $0, %'d0 D:[T14] S:[]): 
	n25(MOVE: movq %'s0, %'d0 D:T3 S:T14): T14
	n26(LABEL: L3): 
	n27(MOVE: movq %'s0, %'d0 D:rax S:T3): T3
	n28(MOVE: movq %'s0, %'d0 D:rbx S:T4): T4
	n29(MOVE: movq %'s0, %'d0 D:r12 S:T5): T5
	n30(MOVE: movq %'s0, %'d0 D:r13 S:T6): T6
	n31(MOVE: movq %'s0, %'d0 D:r14 S:T7): T7
	n32(MOVE: movq %'s0, %'d0 D:r15 S:T8): T8
	n33(OPER: jmp 'j0 D:[] S:[] J:[L5]): 
	n34(LABEL: L5): 
	n35(OPER:  D:[] S:[rax,rsp,rbp,rbx,r12,r13,r14,r15]): r12, r13, r14, r15, rax, rbp, rbx, rsp
ismove:
	n0(LABEL: L6): false
	n1(MOVE: movq %'s0, %'d0 D:T4 S:rbx): true
	n2(MOVE: movq %'s0, %'d0 D:T5 S:r12): true
	n3(MOVE: movq %'s0, %'d0 D:T6 S:r13): true
	n4(MOVE: movq %'s0, %'d0 D:T7 S:r14): true
	n5(MOVE: movq %'s0, %'d0 D:T8 S:r15): true
	n6(MOVE: movq %'s0, %'d0 D:T9 S:rbp): true
	n7(OPER: addq $-8, %'d0 D:[T9] S:[T9]): false
	n8(OPER: movq %'s0, (%'s1) D:[] S:[rdi,T9]): false
	n9(OPER: leaq L1(%rip), %'d0 D:[T10] S:[]): false
	n10(MOVE: movq %'s0, %'d0 D:T0 S:T10): true
	n11(OPER: leaq L2(%rip), %'d0 D:[T11] S:[]): false
	n12(MOVE: movq %'s0, %'d0 D:T1 S:T11): true
	n13(OPER: movq $1, %'d0 D:[T12] S:[]): false
	n14(MOVE: movq %'s0, %'d0 D:T3 S:T12): true
	n15(MOVE: movq %'s0, %'d0 D:rdi S:T1): true
	n16(MOVE: movq %'s0, %'d0 D:rsi S:T0): true
	n17(OPER: call _stringCompare D:[rax,r10,r11,rdi,rsi,rdx,rcx,r8,r9] S:[rdi,rsi]): false
	n18(OPER: addq $16, %'d0 D:[rsp] S:[rsp]): false
	n19(MOVE: movq %'s0, %'d0 D:T2 S:rax): true
	n20(OPER: movq $0, %'d0 D:[T13] S:[]): false
	n21(OPER: cmpq %'s0, %'s1 D:[] S:[T13,T2]): false
	n22(OPER: je 'j0 D:[] S:[] J:[L3,L4]): false
	n23(LABEL: L4): false
	n24(OPER: movq $0, %'d0 D:[T14] S:[]): false
	n25(MOVE: movq %'s0, %'d0 D:T3 S:T14): true
	n26(LABEL: L3): false
	n27(MOVE: movq %'s0, %'d0 D:rax S:T3): true
	n28(MOVE: movq %'s0, %'d0 D:rbx S:T4): true
	n29(MOVE: movq %'s0, %'d0 D:r12 S:T5): true
	n30(MOVE: movq %'s0, %'d0 D:r13 S:T6): true
	n31(MOVE: movq %'s0, %'d0 D:r14 S:T7): true
	n32(MOVE: movq %'s0, %'d0 D:r15 S:T8): true
	n33(OPER: jmp 'j0 D:[] S:[] J:[L5]): false
	n34(LABEL: L5): false
	n35(OPER:  D:[] S:[rax,rsp,rbp,rbx,r12,r13,r14,r15]): false
succesors:
	n0(LABEL: L6): n1
	n1(MOVE: movq %'s0, %'d0 D:T4 S:rbx): n2
	n2(MOVE: movq %'s0, %'d0 D:T5 S:r12): n3
	n3(MOVE: movq %'s0, %'d0 D:T6 S:r13): n4
	n4(MOVE: movq %'s0, %'d0 D:T7 S:r14): n5
	n5(MOVE: movq %'s0, %'d0 D:T8 S:r15): n6
	n6(MOVE: movq %'s0, %'d0 D:T9 S:rbp): n7
	n7(OPER: addq $-8, %'d0 D:[T9] S:[T9]): n8
	n8(OPER: movq %'s0, (%'s1) D:[] S:[rdi,T9]): n9
	n9(OPER: leaq L1(%rip), %'d0 D:[T10] S:[]): n10
	n10(MOVE: movq %'s0, %'d0 D:T0 S:T10): n11
	n11(OPER: leaq L2(%rip), %'d0 D:[T11] S:[]): n12
	n12(MOVE: movq %'s0, %'d0 D:T1 S:T11): n13
	n13(OPER: movq $1, %'d0 D:[T12] S:[]): n14
	n14(MOVE: movq %'s0, %'d0 D:T3 S:T12): n15
	n15(MOVE: movq %'s0, %'d0 D:rdi S:T1): n16
	n16(MOVE: movq %'s0, %'d0 D:rsi S:T0): n17
	n17(OPER: call _stringCompare D:[rax,r10,r11,rdi,rsi,rdx,rcx,r8,r9] S:[rdi,rsi]): n18
	n18(OPER: addq $16, %'d0 D:[rsp] S:[rsp]): n19
	n19(MOVE: movq %'s0, %'d0 D:T2 S:rax): n20
	n20(OPER: movq $0, %'d0 D:[T13] S:[]): n21
	n21(OPER: cmpq %'s0, %'s1 D:[] S:[T13,T2]): n22
	n22(OPER: je 'j0 D:[] S:[] J:[L3,L4]): n23, n26
	n23(LABEL: L4): n24
	n24(OPER: movq $0, %'d0 D:[T14] S:[]): n25
	n25(MOVE: movq %'s0, %'d0 D:T3 S:T14): n26
	n26(LABEL: L3): n27
	n27(MOVE: movq %'s0, %'d0 D:rax S:T3): n28
	n28(MOVE: movq %'s0, %'d0 D:rbx S:T4): n29
	n29(MOVE: movq %'s0, %'d0 D:r12 S:T5): n30
	n30(MOVE: movq %'s0, %'d0 D:r13 S:T6): n31
	n31(MOVE: movq %'s0, %'d0 D:r14 S:T7): n32
	n32(MOVE: movq %'s0, %'d0 D:r15 S:T8): n33
	n33(OPER: jmp 'j0 D:[] S:[] J:[L5]): n34
	n34(LABEL: L5): n35
	n35(OPER:  D:[] S:[rax,rsp,rbp,rbx,r12,r13,r14,r15]): 
;;-END-FLOW-:
yes!!
Return code: 1
