bien!
------Canon------
L1:	.long 9
	.ascii "asdasdasd"
;;--END-STRS--:
--FRAME L0:
LABEL L3
MOVE(
 TEMP T3,
 TEMP rdi)
MOVE(
 TEMP T4,
 TEMP rsi)
MOVE(
 TEMP T5,
 TEMP rbx)
MOVE(
 TEMP T6,
 TEMP r12)
MOVE(
 TEMP T7,
 TEMP r13)
MOVE(
 TEMP T8,
 TEMP r14)
MOVE(
 TEMP T9,
 TEMP r15)
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP rbp,
   CONST -8)),
 TEMP rcx)
MOVE(
 TEMP T0,
 NAME L1)
MOVE(
 TEMP T1,
 CONST 1234)
MOVE(
 TEMP T2,
 BINOP(PLUS,
  TEMP T1,
  CONST 8))
MOVE(
 TEMP rax,
 BINOP(MINUS,
  TEMP T2,
  CONST 1))
MOVE(
 TEMP rdi,
 TEMP T3)
MOVE(
 TEMP rsi,
 TEMP T4)
MOVE(
 TEMP rbx,
 TEMP T5)
MOVE(
 TEMP r12,
 TEMP T6)
MOVE(
 TEMP r13,
 TEMP T7)
MOVE(
 TEMP r14,
 TEMP T8)
MOVE(
 TEMP r15,
 TEMP T9)
JUMP( NAME L2)
LABEL L2
;;-END-FRAME-:
;;--FRAME--L0:
LABEL: L3
MOVE: movq %'s0, %'d0 D:T3 S:rdi
MOVE: movq %'s0, %'d0 D:T4 S:rsi
MOVE: movq %'s0, %'d0 D:T5 S:rbx
MOVE: movq %'s0, %'d0 D:T6 S:r12
MOVE: movq %'s0, %'d0 D:T7 S:r13
MOVE: movq %'s0, %'d0 D:T8 S:r14
MOVE: movq %'s0, %'d0 D:T9 S:r15
MOVE: movq %'s0, %'d0 D:T10 S:rbp
OPER: addq $-8, %'d0 D:[T10] S:[T10]
OPER: movq %'s0, (%'s1) D:[] S:[rcx,T10]
OPER: movq $L1, %'d0 D:[T11] S:[]
MOVE: movq %'s0, %'d0 D:T0 S:T11
OPER: movq $1234, %'d0 D:[T12] S:[]
MOVE: movq %'s0, %'d0 D:T1 S:T12
MOVE: movq %'s0, %'d0 D:T13 S:T1
OPER: addq $8, %'d0 D:[T13] S:[T13]
MOVE: movq %'s0, %'d0 D:T2 S:T13
MOVE: movq %'s0, %'d0 D:T14 S:T2
OPER: subq $1, %'d0 D:[T14] S:[T14]
MOVE: movq %'s0, %'d0 D:rax S:T14
MOVE: movq %'s0, %'d0 D:rdi S:T3
MOVE: movq %'s0, %'d0 D:rsi S:T4
MOVE: movq %'s0, %'d0 D:rbx S:T5
MOVE: movq %'s0, %'d0 D:r12 S:T6
MOVE: movq %'s0, %'d0 D:r13 S:T7
MOVE: movq %'s0, %'d0 D:r14 S:T8
MOVE: movq %'s0, %'d0 D:r15 S:T9
OPER: jmp 'j0 D:[] S:[] J:[L2]
LABEL: L2
OPER:  D:[] S:[rax,rsp,rbp,rdi,rsi,rbx,r12,r13,r14,r15]
;;-END-FRAME-:
yes!!
