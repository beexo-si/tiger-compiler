bien!
------Canon------
L1:	.quad 9
	.string "asdasdasd"
;;--END-STRS--:
--FRAME L0__tigermain_0:
LABEL L3
MOVE(
 TEMP T3,
 TEMP rbx)
MOVE(
 TEMP T4,
 TEMP r12)
MOVE(
 TEMP T5,
 TEMP r13)
MOVE(
 TEMP T6,
 TEMP r14)
MOVE(
 TEMP T7,
 TEMP r15)
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP rbp,
   CONST -8)),
 TEMP rdi)
MOVE(
 TEMP T0,
 NAME L1)
MOVE(
 TEMP T1,
 CONST 1234)
MOVE(
 TEMP T2,
 BINOP(PLUS,
  TEMP T1,
  CONST 8))
MOVE(
 TEMP rax,
 BINOP(MINUS,
  TEMP T2,
  CONST 1))
MOVE(
 TEMP rbx,
 TEMP T3)
MOVE(
 TEMP r12,
 TEMP T4)
MOVE(
 TEMP r13,
 TEMP T5)
MOVE(
 TEMP r14,
 TEMP T6)
MOVE(
 TEMP r15,
 TEMP T7)
JUMP( NAME L2)
LABEL L2
;;-END-FRAME-:
;;--FRAME--L0__tigermain_0:
LABEL: L3
MOVE: movq %'s0, %'d0 D:T3 S:rbx
MOVE: movq %'s0, %'d0 D:T4 S:r12
MOVE: movq %'s0, %'d0 D:T5 S:r13
MOVE: movq %'s0, %'d0 D:T6 S:r14
MOVE: movq %'s0, %'d0 D:T7 S:r15
MOVE: movq %'s0, %'d0 D:T8 S:rbp
OPER: addq $-8, %'d0 D:[T8] S:[T8]
OPER: movq %'s0, (%'s1) D:[] S:[rdi,T8]
OPER: leaq L1(%rip), %'d0 D:[T9] S:[]
MOVE: movq %'s0, %'d0 D:T0 S:T9
OPER: movq $1234, %'d0 D:[T10] S:[]
MOVE: movq %'s0, %'d0 D:T1 S:T10
MOVE: movq %'s0, %'d0 D:T11 S:T1
OPER: addq $8, %'d0 D:[T11] S:[T11]
MOVE: movq %'s0, %'d0 D:T2 S:T11
MOVE: movq %'s0, %'d0 D:T12 S:T2
OPER: subq $1, %'d0 D:[T12] S:[T12]
MOVE: movq %'s0, %'d0 D:rax S:T12
MOVE: movq %'s0, %'d0 D:rbx S:T3
MOVE: movq %'s0, %'d0 D:r12 S:T4
MOVE: movq %'s0, %'d0 D:r13 S:T5
MOVE: movq %'s0, %'d0 D:r14 S:T6
MOVE: movq %'s0, %'d0 D:r15 S:T7
OPER: jmp 'j0 D:[] S:[] J:[L2]
LABEL: L2
OPER:  D:[] S:[rax,rsp,rbp,rbx,r12,r13,r14,r15]
;;-END-FRAME-:
yes!!
Return code: 217
