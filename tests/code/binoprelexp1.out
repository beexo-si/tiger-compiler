bien!
------Canon------
;;--END-STRS--:
--FRAME L0__tigermain_0:
LABEL L7
MOVE(
 TEMP T5,
 TEMP rbx)
MOVE(
 TEMP T6,
 TEMP r12)
MOVE(
 TEMP T7,
 TEMP r13)
MOVE(
 TEMP T8,
 TEMP r14)
MOVE(
 TEMP T9,
 TEMP r15)
MOVE(
 MEM(
  BINOP(PLUS,
   TEMP rbp,
   CONST -8)),
 TEMP rdi)
MOVE(
 TEMP T0,
 CONST 2)
MOVE(
 TEMP T1,
 CONST 34)
MOVE(
 TEMP T3,
 CONST 1)
CJUMP(EQ,
 TEMP T0,
 TEMP T1,
 L1,L2)
LABEL L2
MOVE(
 TEMP T3,
 CONST 0)
LABEL L1
MOVE(
 TEMP T2,
 TEMP T3)
CJUMP(NE,
 TEMP T2,
 CONST 0,
 L3,L4)
LABEL L4
MOVE(
 TEMP T4,
 CONST 2)
LABEL L5
MOVE(
 TEMP T2,
 TEMP T4)
MOVE(
 TEMP rax,
 TEMP T2)
MOVE(
 TEMP rbx,
 TEMP T5)
MOVE(
 TEMP r12,
 TEMP T6)
MOVE(
 TEMP r13,
 TEMP T7)
MOVE(
 TEMP r14,
 TEMP T8)
MOVE(
 TEMP r15,
 TEMP T9)
JUMP( NAME L6)
LABEL L3
MOVE(
 TEMP T4,
 CONST 1)
JUMP( NAME L5)
LABEL L6
;;-END-FRAME-:
;;--FRAME--L0__tigermain_0:
LABEL: L7
MOVE: movq %'s0, %'d0 D:T5 S:rbx
MOVE: movq %'s0, %'d0 D:T6 S:r12
MOVE: movq %'s0, %'d0 D:T7 S:r13
MOVE: movq %'s0, %'d0 D:T8 S:r14
MOVE: movq %'s0, %'d0 D:T9 S:r15
MOVE: movq %'s0, %'d0 D:T10 S:rbp
OPER: addq $-8, %'d0 D:[T10] S:[T10]
OPER: movq %'s0, (%'s1) D:[] S:[rdi,T10]
OPER: movq $2, %'d0 D:[T11] S:[]
MOVE: movq %'s0, %'d0 D:T0 S:T11
OPER: movq $34, %'d0 D:[T12] S:[]
MOVE: movq %'s0, %'d0 D:T1 S:T12
OPER: movq $1, %'d0 D:[T13] S:[]
MOVE: movq %'s0, %'d0 D:T3 S:T13
OPER: cmpq %'s0, %'s1 D:[] S:[T0,T1]
OPER: je 'j0 D:[] S:[] J:[L1,L2]
LABEL: L2
OPER: movq $0, %'d0 D:[T14] S:[]
MOVE: movq %'s0, %'d0 D:T3 S:T14
LABEL: L1
MOVE: movq %'s0, %'d0 D:T2 S:T3
OPER: movq $0, %'d0 D:[T15] S:[]
OPER: cmpq %'s0, %'s1 D:[] S:[T2,T15]
OPER: jne 'j0 D:[] S:[] J:[L3,L4]
LABEL: L4
OPER: movq $2, %'d0 D:[T16] S:[]
MOVE: movq %'s0, %'d0 D:T4 S:T16
LABEL: L5
MOVE: movq %'s0, %'d0 D:T2 S:T4
MOVE: movq %'s0, %'d0 D:rax S:T2
MOVE: movq %'s0, %'d0 D:rbx S:T5
MOVE: movq %'s0, %'d0 D:r12 S:T6
MOVE: movq %'s0, %'d0 D:r13 S:T7
MOVE: movq %'s0, %'d0 D:r14 S:T8
MOVE: movq %'s0, %'d0 D:r15 S:T9
OPER: jmp 'j0 D:[] S:[] J:[L6]
LABEL: L3
OPER: movq $1, %'d0 D:[T17] S:[]
MOVE: movq %'s0, %'d0 D:T4 S:T17
OPER: jmp 'j0 D:[] S:[] J:[L5]
LABEL: L6
OPER:  D:[] S:[rax,rsp,rbp,rbx,r12,r13,r14,r15]
;;-END-FRAME-:
yes!!
Return code: 2
