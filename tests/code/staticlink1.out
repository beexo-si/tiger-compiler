bien!
;;--FRAME--L0__tigermain_0:
LABEL: L5
MOVE: movq %'s0, %'d0 D:T7 S:rbx
MOVE: movq %'s0, %'d0 D:T8 S:r12
MOVE: movq %'s0, %'d0 D:T9 S:r13
MOVE: movq %'s0, %'d0 D:T10 S:r14
MOVE: movq %'s0, %'d0 D:T11 S:r15
MOVE: movq %'s0, %'d0 D:T12 S:rbp
OPER: addq $-8, %'d0 D:[T12] S:[T12]
OPER: movq %'s0, (%'s1) D:[] S:[rdi,T12]
MOVE: movq %'s0, %'d0 D:T5 S:rbp
MOVE: movq %'s0, %'d0 D:rdi S:T5
MOVE: movq %'s0, %'d0 D:rsi S:rsp
OPER: call L1_f_4 D:[rax,r10,r11,rdi,rsi,rdx,rcx,r8,r9] S:[rdi,rsi]
MOVE: movq %'s0, %'d0 D:T6 S:rax
MOVE: movq %'s0, %'d0 D:rax S:T6
MOVE: movq %'s0, %'d0 D:rbx S:T7
MOVE: movq %'s0, %'d0 D:r12 S:T8
MOVE: movq %'s0, %'d0 D:r13 S:T9
MOVE: movq %'s0, %'d0 D:r14 S:T10
MOVE: movq %'s0, %'d0 D:r15 S:T11
OPER: jmp 'j0 D:[] S:[] J:[L4]
LABEL: L4
OPER:  D:[] S:[rax,rsp,rbp,rbx,r12,r13,r14,r15]
;;-END-FRAME-:
;;--FRAME--L1_f_4:
LABEL: L3
MOVE: movq %'s0, %'d0 D:T0 S:rbx
MOVE: movq %'s0, %'d0 D:T1 S:r12
MOVE: movq %'s0, %'d0 D:T2 S:r13
MOVE: movq %'s0, %'d0 D:T3 S:r14
MOVE: movq %'s0, %'d0 D:T4 S:r15
MOVE: movq %'s0, %'d0 D:T13 S:rbp
OPER: addq $-8, %'d0 D:[T13] S:[T13]
OPER: movq %'s0, (%'s1) D:[] S:[rdi,T13]
OPER: movq $5, %'d0 D:[T14] S:[]
MOVE: movq %'s0, %'d0 D:rax S:T14
MOVE: movq %'s0, %'d0 D:rbx S:T0
MOVE: movq %'s0, %'d0 D:r12 S:T1
MOVE: movq %'s0, %'d0 D:r13 S:T2
MOVE: movq %'s0, %'d0 D:r14 S:T3
MOVE: movq %'s0, %'d0 D:r15 S:T4
OPER: jmp 'j0 D:[] S:[] J:[L2]
LABEL: L2
OPER:  D:[] S:[rax,rsp,rbp,rbx,r12,r13,r14,r15]
;;-END-FRAME-:
------Assembler------
.data
.text
.global L0__tigermain_0
	L0__tigermain_0:
	#prologo:
	pushq %rbp
	movq %rsp, %rbp
	addq $-16, %rsp


L5:





	movq %rbp, %rsi
	addq $-8, %rsi
	movq %rdi, (%rsi)
	movq %rbp, %rdi

	movq %rsp, %rsi
	call L1_f_4







	jmp L4
L4:
	

	#END L0__tigermain_0
	movq %rbp,%rsp
	popq %rbp
	ret


.global L1_f_4
	L1_f_4:
	#prologo:
	pushq %rbp
	movq %rsp, %rbp
	addq $-16, %rsp


L3:





	movq %rbp, %rsi
	addq $-8, %rsi
	movq %rdi, (%rsi)
	movq $5, %rax






	jmp L2
L2:
	

	#END L1_f_4
	movq %rbp,%rsp
	popq %rbp
	ret


yes!!
Return code: 5
