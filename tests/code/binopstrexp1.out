bien!
------Canon------
L2:	.long 3
	.ascii "asd"
L1:	.long 3
	.ascii "asd"
;;--END-STRS--:
--FRAME L0:
LABEL L6
MOVE(
 TEMP T0,
 NAME L1)
MOVE(
 TEMP T1,
 NAME L2)
MOVE(
 TEMP T3,
 CONST 1)
EXP(
 CALL(
  NAME _stringCompare,
   TEMP T1,
   TEMP T0))
MOVE(
 TEMP T2,
 TEMP rax)
CJUMP(EQ,
 TEMP T2,
 CONST 0,
 L3,L4)
LABEL L4
MOVE(
 TEMP T3,
 CONST 0)
LABEL L3
MOVE(
 TEMP rax,
 TEMP T3)
JUMP( NAME L5)
LABEL L5
;;-END-FRAME-:
;;--FRAME--L0:
LABEL: L6
OPER: movq $L1, %'d0 D:[T4] S:[]
MOVE: movq %'s0, %'d0 D:T0 S:T4
OPER: movq $L2, %'d0 D:[T5] S:[]
MOVE: movq %'s0, %'d0 D:T1 S:T5
OPER: movq $1, %'d0 D:[T6] S:[]
MOVE: movq %'s0, %'d0 D:T3 S:T6
OPER: pushq 's0 D:[] S:[T0]
OPER: pushq 's0 D:[] S:[T1]
OPER: call _stringCompare D:[rax,rdx,rcx,r10,r11,rdi,rsi,rdx,rcx,r8,r9,rax] S:[]
OPER: addq $16, %'d0 D:[rsp] S:[rsp]
MOVE: movq %'s0, %'d0 D:T2 S:rax
OPER: movq $0, %'d0 D:[T7] S:[]
OPER: cmpq 's0, 's1 D:[] S:[T2,T7]
OPER: je 'j0 D:[] S:[] J:[L3,L4]
LABEL: L4
OPER: movq $0, %'d0 D:[T8] S:[]
MOVE: movq %'s0, %'d0 D:T3 S:T8
LABEL: L3
MOVE: movq %'s0, %'d0 D:rax S:T3
OPER: jmp 'j0 D:[] S:[] J:[L5]
LABEL: L5
OPER:  D:[] S:[rax,rsp,rbp,rbx,r12,r13,r14,r15]
;;-END-FRAME-:
yes!!
